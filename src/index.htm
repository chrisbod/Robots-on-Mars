<!doctype html>
<html>
	<head>
	<script src="grid.js"></script>
	<script src="robot.js"></script>
	<script>
	function RobotsOnMars() {}
	RobotsOnMars.prototype.createGrid = function robotsOnMars_createGrid(gridDefinition) {
		this.definitionString = gridDefinition;
		this.definitionArray = gridDefinition.split(" ");
		this.grid = new RemoteGrid(this.definitionArray[0],this.definitionArray[1]);
		return this;
	}
	//Properties
	RobotsOnMars.prototype.definitionString = "";
	RobotsOnMars.prototype.definitionArray = void (Array) || null;
	RobotsOnMars.prototype.grid = void (RemoteGrid) || null;
	
	
	//Methods
	RobotsOnMars.prototype.insertRobot = function robotsOnMars_insertRobot(robotDefinition) {
		return this;
	}
	RobotsOnMars.prototype.instructRobot = function robotsOnMars_instructRobot(instruction) {
		return this;
	}
	RobotsOnMars.prototype.getOutput = function robotsOnMars_getOutput() {
		
	}
	RobotsOnMars.prototype.renderOutput = function robotsOnMars_renderOutput() {
	}
	

	
	
	</script>
	<script>


window.onerror = function (error) {//now that is lazy
	alert(error);
}
	var robotsOnMars = new RobotsOnMars();
robotsOnMars.createGrid("5 3"); //things are better when you pay attention


robotsOnMars
	.insertRobot("1 1 E")
	.instructRobot("RFRFRFRF")

if (robotsOnMars.getOutput()!="1 1 E") {
	throw "Unexpected result [1 1 E,RFRFRFRF]->"+robotsOnMars.getOutput();
}
robotsOnMars.renderOutput();

robotsOnMars
	.insertRobot("3 2 N");
//check that we have a 'clean state' now that a new robot is in play
if (robotsOnMars.getOutput()) {
	throw "Inserted new robot but output is not clean ("+robotsOnMars.getOutput()+")";
}

robotsOnMars.instructRobot("FRRFLLFFRRFLL")

if (robotsOnMars.getOutput()!="3 3 N LOST") {
	throw "Unexpected result [3 2 N,FRRFLLFFRRFLL]->"+robotsOnMars.getOutput();
}
robotsOnMars.renderOutput();
robotsOnMars
	.insertRobot("0 3 W")
	.instructRobot("LLFFFLFLFL")
if (robotsOnMars.getOutput()!="2 3 S") {
	throw "Unexpected result [0 3 W,LLFFFLFLFL]->"+robotsOnMars.getOutput();
}
robotsOnMars.renderOutput()




	

	</script>
	<style>
	fieldset, div {
		float: left;
		clear: both;
	}
		label {
			display: block;
		}
	
	</style>
	</head>
	<body>
		<form>
		<fieldset>
			<legend>Robots On Mars</legend>
			<div>
			<label>
				Grid size (e.g "10 10"): <input name="gridsize">
			</label>
			<input type="reset">
			</div>
			<fieldset>
				<label>
					New Robot Position: <input name="robotposition">
				</label>
				<label>
					Robot Instructions: <input name="robotinstructions">
				<label>
				<input type="submit" value="Insert and Instruct">
			</fieldset>
			<label>Output: </label>
			<textarea name="output" style="height: 10em"></textarea>
			
		</fieldset>
		</form>
	
	</body>



</html>